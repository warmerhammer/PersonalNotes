plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs'
    id 'com.google.gms.google-services'
    id 'com.google.dagger.hilt.android'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.warmerhammer.personalnotes"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        targetSdkVersion 33

        javaCompileOptions {
            annotationProcessorOptions {
                compilerArgumentProviders(
                        new RoomSchemaArgProvider(new File(projectDir, "schemas"))
                )
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation 'androidx.leanback:leanback:1.0.0'
    def fragment_version = "1.6.2"
    def nav_version = "2.5.1"
    def room_version = "2.4.3"

    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // activity
    implementation 'androidx.activity:activity-ktx:1.5.1'

    // room
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    // To use Kotlin annotation processing tool (kapt)
    kapt "androidx.room:room-compiler:$room_version"

    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.1"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.6.4'
    // firebase BOM
    implementation platform('com.google.firebase:firebase-bom:31.4.0')
    implementation 'com.google.firebase:firebase-analytics'
    // firebaseUI
    implementation 'com.firebaseui:firebase-ui-auth:7.2.0'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    // firebase auth
    implementation 'com.google.firebase:firebase-auth-ktx'
    // fragment
    implementation("androidx.fragment:fragment-ktx:$fragment_version")
    // firebase cloud storage
    implementation 'com.google.firebase:firebase-storage-ktx'
    // Cloud Firestore Library
    implementation 'com.google.firebase:firebase-firestore-ktx'
    //Google Drive
    implementation('com.google.api-client:google-api-client-android:1.23.0') {
        exclude group: 'org.apache.httpcomponents'
        exclude module: 'guava-jdk5'
    }
    implementation('com.google.apis:google-api-services-drive:v3-rev136-1.25.0') {
        exclude group: 'org.apache.httpcomponents'
        exclude module: 'guava-jdk5'
    }
    // Glide
    implementation 'com.github.bumptech.glide:glide:4.13.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.13.0'
    // Google Play services
    implementation 'com.google.android.gms:play-services-auth:20.5.0'
    implementation 'com.google.android.gms:play-services-drive:17.0.0'
    // Gson
    implementation 'com.google.code.gson:gson:2.8.9'
    //navigation
    implementation("androidx.navigation:navigation-fragment-ktx:$nav_version")
    implementation("androidx.navigation:navigation-ui-ktx:$nav_version")
    // RecyclerView
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    // viewBinding
    implementation 'com.android.databinding:viewbinding:7.2.2'
    //coordinator layout
    implementation("androidx.coordinatorlayout:coordinatorlayout:1.2.0")
    // Dagger
    implementation("com.google.dagger:dagger:2.28.3")
    kapt 'com.google.dagger:dagger-compiler:2.28.3'
    // hilt
    implementation "com.google.dagger:hilt-android:2.44"
    kapt "com.google.dagger:hilt-compiler:2.44"

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.5.0'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

kapt {
    correctErrorTypes true
}

class RoomSchemaArgProvider implements CommandLineArgumentProvider {

    @InputDirectory
    @PathSensitive(PathSensitivity.RELATIVE)
    File schemaDir

    RoomSchemaArgProvider(File schemaDir) {
        this.schemaDir = schemaDir
    }

    @Override
    Iterable<String> asArguments() {
        // Note: If you're using KSP, change the line below to return
        // ["room.schemaLocation=${schemaDir.path}".toString()].
        return ["-Aroom.schemaLocation=${schemaDir.path}".toString()]
    }
}